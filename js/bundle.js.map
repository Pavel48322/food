{"version":3,"sources":["webpack://food/./js/modules/calculator.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["function calculator() {\n    // Calculator\n\n    const result = document.querySelector('.calculating__result span'); //Это результат \n\n    let sex, height, weight, age, ratio = 1.375; // Пол, рост, вес, возраст, активность\n\n    if (localStorage.getItem('sex')) { // если уже есть в хранилище, то оставляем такое\n        sex = localStorage.getItem('sex');\n    } else { // если нет в хранилище, то ставим female и записываем в хранилище\n        sex = \"female\";\n        localStorage.setItem('sex', 'female');\n    }\n\n    if (localStorage.getItem('ratio')) { // если уже есть в хранилище, то оставляем такое\n        let ratio = localStorage.getItem('ratio');\n    } else { // если нет в хранилище, то ставим 1.375 и записываем в хранилище\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n\n    //Для локального хранилища, чтобы запоминало при обновлении\n    function initLocalSettings(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.classList.remove(activeClass); //убираем активный класс \n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\n                elem.classList.add(activeClass); // добавляем активный класс (для пола)\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\n                elem.classList.add(activeClass); // добавляем активный класс (активности)\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function calcTotal() {\n        if (!sex || !height || !weight || !age || !ratio) {\n            result.textContent = \"____\";\n            return;\n        } // Если мы что-то не ввели, то ничего не покажет\n\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        } // Если женщина, то одна формула, если мужчина, то другая. Так же округляем!\n    }\n\n    calcTotal();\n\n    function getStaticInformation(selector, activeClass) {\n        const elements = document.querySelectorAll(selector); // буду получать все дивы\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if (e.target.getAttribute('data-ratio')) { // Если такой аттрибут присуствует, то\n                    ratio = +e.target.getAttribute('data-ratio'); //вытаскиваем то значение (1.2 и т.д)\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); // при обновлении страницы\n                    //все останется, именно ratio;\n                } else { // если нет, то вытаскиваем что написано (женщина или мужчина)\n                    sex = e.target.getAttribute('id');\n                    localStorage.setItem('sex', e.target.getAttribute('id'));// при обновлении страницы все останется, \n                    // именно пол\n                }\n\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);// убираем класс активности у всех элементов\n                });\n\n                e.target.classList.add(activeClass);//назначаем класс активности тому объекту которому кликнули\n\n                calcTotal();\n            });\n        });\n    }\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active'); // для пола (мужской женский)\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');//для пола (мужской женский)\n\n    function getDynamicInformation(selector) {\n        const input = document.querySelector(selector);\n\n        //Делаем перебор по инпутам\n        input.addEventListener('input', () => {\n\n            if (input.value.match(/\\D/g)){//Если мы нашли не число, то:\n                input.style.border = '1px solid red'; // красим в белый цвет\n            } else { // если нет то:\n                input.style.border = 'none'; // обводки не будет\n            }\n\n            switch(input.getAttribute('id')) {\n                case 'height':\n                    height = +input.value;                    \n                    break;\n                case 'weight':\n                    weight = +input.value;                    \n                    break;\n                case 'age':\n                    age = +input.value;                    \n                    break;\n            } // когда мы будем что-то вводить она будет орентироваться на уникальный индефикатор и записывать данные\n            // в эту переменную\n            calcTotal();\n        });\n    }\n    \n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n\n}\n\nexport default calculator;","import {getResource} from '../services/services';\n\nfunction cards() {\n    // Используем классы для карточек \n\n    class MenuCard {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes; // мы не знаем сколько будет аргументов в будущем\n            this.parent = document.querySelector(parentSelector); //обязательно получаем только 1 элемент\n            this.transfer = 27; //трансформируем с гривны в доллары\n            this.changeToUAH(); // все идет последовательно, поэтому этот метод вызовется после всего и изменит price\n        }\n\n        changeToUAH() {\n            this.price = this.price * this.transfer;\n        }// этот метод отвечает на конвертацию валют \n\n        render() {\n            const element = document.createElement('div'); //создаем какой-то блок\n            if (this.classes.length === 0) {\n                this.element = \"menu__item\";\n                element.classList.add(this.element);\n            } else {\n                this.classes.forEach(className => element.classList.add(className));\n                //мы перебираем весь массив, и присваем className каждому элементу\n            } // если у нас ничего не добавляется, ты мы добавляем сами \"menu__item\"\n            // Если же у нас есть что-то, то мы перебираем через forEach, так как у нас это массив\n\n            element.innerHTML = `\n                <img src=${this.src} alt=${this.alt}>\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                <div class=\"menu__item-descr\">${this.descr}</div>\n                <div class=\"menu__item-divider\"></div>\n                <div class=\"menu__item-price\">\n                    <div class=\"menu__item-cost\">Цена:</div>\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                </div>\n            `;\n            this.parent.append(element); // добавляем в самый конец своего родителя \n        }\n    }\n\n    \n\n    getResource('http://localhost:3000/menu')\n        .then(data => { // data Это большой массив из db.json\n            data.forEach(({img, altimg, title, descr, price}) =>{\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n            });// Этот конструктор будет создаваться столько раз, сколько объектов внутри массива\n            // который мне придет из сервера\n        });\n\n}\n\nexport default  cards;","import {closeModal, openModal} from './modal';\nimport {postData} from '../services/services';\n\nfunction forms(formSelector, modalTimerId) {\n    //Forms\n\n    const forms = document.querySelectorAll(formSelector);\n\n    const message = {\n        loading: 'img/form/spinner.svg', //Путь к картинке (загрузка)\n        success: 'Спасибо! Скоро мы с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    }; // Что будет показываться, когда отправим форму\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n   \n    \n    function bindPostData(form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault(); //Отменяем стандартное поведение\n\n            const statusMessage = document.createElement('img'); //так как у нас картинка, то создаем img вместо div\n            statusMessage.src = message.loading; //создали изображения и сразщу же подставили атриббут src\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage);// в нашу форму добавляем наш спинер(картинку)\n// и добавляем так, чтобы он был снизу, а не сбоку, когда стоят в css display: flex\n\n\n            const formData = new FormData(form);\n            \n            // трансформация в JSON формат\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n            //entries делает из объекта массив с масивами\n            //fromEntries делает из массива объект\n\n            postData('http://localhost:3000/requests', json)\n            .then(data => {\n                console.log(data); // Выведем в консоль то что нам вернул сервер\n                showThanksModal(message.success); // Ниже мы создали функцию\n                statusMessage.remove(); //удаляет блок со страницы\n            })\n            .catch(() => {\n                showThanksModal(message.failure); // Если что-то пойдем не так, то выполнится это\n            })\n            .finally(() => {\n                form.reset();// После отправки форма очищается\n            }); \n        });\n    }\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide'); // сразу скрываем блок\n        openModal('.modal', modalTimerId); // Отвечает за открытие модельного окна\n\n        const thanksModal = document.createElement('div');// Создаем дополнительный блок\n        thanksModal.classList.add('modal__dialog'); // Придаем этому блоку класс, который уже есть в HTML\n        thanksModal.innerHTML = `\n            <div class=\"modal__content>\n                <div class=\"modal__close\" date-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal); // append - вставка элемента в конец\n        setTimeout(() => {\n            thanksModal.remove();// Удаление блока через 4 секунды \n            prevModalDialog.classList.add(\"show\"); // Добавляем класс \n            prevModalDialog.classList.remove('hide');// Убираем класс\n            closeModal('.modal'); //Закрываем модельное окно\n        }, 4000); \n    }\n\n    fetch('http://localhost:3000/menu')\n        .then(data => data.json())\n        .then(res => console.log(res));\n\n}\n\nexport default  forms;\n","    function openModal(modalSelector, modalTimerId) {\n\n        const modal = document.querySelector(modalSelector); \n        modal.classList.add('show');\n        modal.classList.remove('hidden');\n        document.body.style.overflow = 'hidden';// чтобы оснoвное окно нельзя было прокрутить\n\n        if (modalTimerId){\n            clearInterval(modalTimerId); // Если мы сами откроем, чтобы оно не открывалось еще раз по истечении времени\n        }\n    }\n    function closeModal(modalSelector) {\n        const modal = document.querySelector(modalSelector); \n        modal.classList.add('hidden');\n        modal.classList.remove('show');\n        document.body.style.overflow = ''; // возвращаем, чтобы можно было скроллить страницу\n    }// мы создали эту функцию, так как есть повторения, и если есть как минимум 2 повторения, то нужно выносить в функц\n\n\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\n\n    const modalTrigger = document.querySelectorAll(triggerSelector), //Обращаемся по data атрибуту \n          modal = document.querySelector(modalSelector); \n\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));// При клике меняем класс на block\n    }); // Делаем через forEach так как из несколько (делаем перебор) \n\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal || e.target.getAttribute('data-close') == \"\") {\n            closeModal(modalSelector);\n        }\n    }); // при нажатии не на кнопку закрыть, а на пустое место (вокруг окна) закроется это окно\n\n    document.addEventListener('keydown', (e) => {\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\n            closeModal(modalSelector);\n        }\n    }); // При нажатии на esc будет закрываться модельное окно и так же мы проверяем открыто ли окно\n    // Все кнопки можно найти на сайте keycode.info\n\n\n    function showModalByScroll() {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScroll); //чтобы не появлялось каждый раз, как мы опускаемся\n            //вниз, мы его удаляем\n        }//Не понял, но суть такая:Если мы долистали до конца, то сработает. Идет какое-то сравнивание которое непонятно\n    }\n\n    window.addEventListener('scroll', showModalByScroll);\n}\n\nexport default  modal;\nexport {closeModal};\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\n\n    //Slider\n\n    let slideIndex = 1; //задаем индекс слайду\n    let offset = 0; //расположение текущего слайда\n\n\n    const slides = document.querySelectorAll(slide), //Весь блок со слайдами\n          slider = document.querySelector(container), // отдельные слайды\n          prev = document.querySelector(prevArrow), // кнопка влево\n          next = document.querySelector(nextArrow), // кнопка вправо\n          total = document.querySelector(totalCounter), // сколько всего написанно слайдов\n          current = document.querySelector(currentCounter), // какой сейчас написан слайд\n          slidesWrapper = document.querySelector(wrapper),\n          slidesField = document.querySelector(field),\n          width = window.getComputedStyle(slidesWrapper).width; // узнаем ширину\n    \n  \n    if (slides.length < 10) { // Это отвечает за то, что если будет общее количество слайдов до 10, то добавляется 0\n    // и так же с просто при перемещении слайдов, чтобы 0 был\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = slides.length;\n        current.textContent = `0${slideIndex}`;\n\n    }\n\n    slidesField.style.width = 100 * slides.length + '%'; // узнаем ширину польностью всех слайдов\n    slidesField.style.display = 'flex'; // все в одну строку\n    slidesField.style.transition = '0.5s all'; // плавный переход\n    \n    slidesWrapper.style.overflow = 'hidden'; // ограничиваем, чтобы видно было 100%, а не 400%\n\n    slides.forEach(slide => {\n        slide.style.width = width; //теперь мы точно уверенны что все слайды одинаковой ширины\n    }); \n\n    slider.style.position = 'relative'; \n\n    const indicators = document.createElement('ol'), //Создаем эелемент на страницу\n          dots = []; //Создаем массив\n\n    indicators.classList.add('carousel-indicators');\n    slider.append(indicators);\n\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1);\n        dot.classList.add('dot');\n        if (i == 0) {\n            dot.style.opacity = 1;\n        }\n        indicators.append(dot);\n        dots.push(dot);\n    }\n    \n    //replace (регулярное выражение), удаляет все НЕ ЧИСЛА  \n    function deleteNotDigits(str) {\n        return +str.replace(/\\D/g, '');\n    }\n    \n    //Для плавного перехода\n    function slidesFieldTransform() {\n                slidesField.style.transform = `translateX(-${offset}px)`;\n    }\n\n    //Текущий слайд с 0 до 10 и без 0 после 10\n    function currentSlide() {\n        if(slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n    }\n\n    //При пролистывании делает не активные слайды менее прозрачными а активным непрозрачным\n    function opacitySlides() {\n        dots.forEach(dot => dot.style.opacity = '0.5');\n        dots[slideIndex - 1].style.opacity = 1;\n    }\n\n    //кнопка вперед\n    next.addEventListener('click', () => {\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { \n            offset = 0;////если наш offset будет равен всей ширине наших слайдов, то возвращаемся в начало\n        } else {\n            offset += deleteNotDigits(width); //добавляем смещение, если не последний слайд\n        }\n\n        slidesFieldTransform();\n\n        if (slideIndex == slides.length) {\n            slideIndex = 1; // возвращаемся в начало, если дойдет до конца\n        } else {\n            slideIndex++;\n        }\n\n        currentSlide();\n\n        opacitySlides(); \n    });\n\n    //кнопка назад\n    // все так же как вперед, только наоборот\n    prev.addEventListener('click', () => {\n        if (offset == 0) {  \n            offset = deleteNotDigits(width) * (slides.length - 1);\n        } else {\n            offset -= deleteNotDigits(width); //уменьшаем смещение, если не последний слайд\n        }\n\n        slidesFieldTransform();\n\n        if (slideIndex == 1) {\n            slideIndex = slides.length; // возвращаемся в конец, если дойдет до начала\n        } else {\n            slideIndex--;\n        }\n\n        currentSlide();\n\n        opacitySlides(); \n    });\n     \n    //Работа с массивом\n    dots.forEach(dot => {\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to'); // узнаем порядок слайдов\n            slideIndex = slideTo; // заменяем порядок слайдов индексом\n            offset = deleteNotDigits(width) * (slideTo -1);\n\n            slidesFieldTransform();\n\n            currentSlide();\n\n            opacitySlides(); \n        });\n    });\n\n}\n\nexport default  slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\n     //Tabs\n\n    const tabs = document.querySelectorAll(tabsSelector),\n          tabsContent = document.querySelectorAll(tabsContentSelector),\n          tabsParent = document.querySelector(tabsParentSelector);\n\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            item.classList.add(\"hide\"); //тут мы добавляем класс hide (display: none)\n            item.classList.remove(\"show\", 'fade'); // тут мы удаляем класс show (display: block) и fade (Анимацию)\n        });\n\n        tabs.forEach(item => {\n            item.classList.remove(activeClass); // Тут мы удаляем активный таб\n        });\n    } // все табы скрыли\n\n    function showTabContant(i = 0) {\n        tabsContent[i].classList.add(\"show\", 'fade');// Добавили анимацию и display: block только на 1 таб\n        tabsContent[i].classList.remove(\"hide\"); // удаляем display: none\n        tabs[i].classList.add(activeClass); // добавляем активный класс\n\n    }// показали активный класс\n\n    hideTabContent();\n    showTabContant();\n\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target;\n\n        if (target && target.classList.contains(tabsSelector.slice(1))) { // вешаем одинаковые события на детей\n            tabs.forEach((item, i) => { // где i номер кнопки которую мы нажимаем\n                if (target == item) {\n                    hideTabContent();\n                    showTabContant(i);\n                }\n            });\n        }\n    }); // сделали переключение между табами, путем удаления и добавления активных табов\n\n}\n\nexport default  tabs;","function timer(id, deadline) {\n\n    function getTimeRemaining(endtime) {\n        const t = Date.parse(endtime) - Date.parse(new Date()), //Получим разницу между датами \n              days = Math.floor(t / (1000 * 60 * 60 * 24)), // floor округляет до круглого числа.\n// а потом мы узнаем сколько миллисекунд в одном дне.\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)), // общее количество часов делим с остатком на 24ч (сутки)\n// мы делим на 24, чтобы получить не целове количество, а хвостики, и выйдет не больше 24\n              minutes = Math.floor((t / 1000 / 60) % 60), // сразу получаем количество секунд, потом минут\n              seconds = Math.floor((t / 1000) % 60); // получаем секунды\n\n        return {\n            'total': t, \n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds,\n        };\n    }\n\n    function getZero(num) {\n        if (num >= 0 && num < 10) {\n            return `0${num}`; // если число равно или выше 0 или ниже 10, то добавляем 0\n        } else {\n            return num; // если нет, то просто выводим число\n        }\n    }// Функция отвечает за то, что если число '9' или ниже, то добавляем '0' и выйдет '09'\n\n    function setClock(selector, endtime) {\n        const timer = document.querySelector(selector),\n              days = timer.querySelector('#days'),\n              hours = timer.querySelector('#hours'),\n              minutes = timer.querySelector('#minutes'),\n              seconds = timer.querySelector('#seconds'),\n              timeInterval = setInterval(updateClock, 1000); // каждую секунду вызываем функцию\n        // получили все элементы со страницы, где 'selector' это '.timer' и он родитель days  и т.д.\n\n        updateClock(); // Вызываем первый раз в ручную, чтобы не ждать первую секунду, ибо получится мигание\n\n        function updateClock() {\n            const t = getTimeRemaining(endtime); // вызываем прошлую функция (return передает сюда)\n\n            days.innerHTML = getZero(t.days);// вызываем ту функцию, которая добавляет 0\n            hours.innerHTML = getZero(t.hours);// вызываем ту функцию, которая добавляет 0\n            minutes.innerHTML = getZero(t.minutes);// вызываем ту функцию, которая добавляет 0\n            seconds.innerHTML = getZero(t.seconds);  // вызываем ту функцию, которая добавляет 0\n        // когда функция запустится, она расчитает нужно время, и на основе этих расчетов будет записано время на стр\n\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            } // если время вышло, то таймер не обновляем\n        }\n    }\n\n    setClock(id, deadline);\n\n}\n\nexport default  timer;","  // вот так мы отправляем данные\n    const postData = async (url, data) => { //В функции будет какойто асинхронный код, поэтому мы написали async\n        const res = await fetch(url, { // тут мы пишем куда // использовали его парный оператор await, перед теми\n        // операциями, которые нужно дождаться. Эти операторы всегда используются в паре!\n            method: \"POST\", \n            headers: {\n                'Content-type': 'application/json' // каким образом\n            },\n            body: data   // что именно\n        });\n\n        return await res.json(); //Дожидается работы этого промиса и только потом его возвращает\n    };\n\n    const getResource = async (url) => { //В функции будет какойто асинхронный код, поэтому мы написали async\n        const res = await fetch(url); // тут мы пишем куда // использовали его парный оператор await, перед теми\n        // операциями, которые нужно дождаться. Эти операторы всегда используются в паре!\n        if(!res.ok) {\n            throw new Error(`Coul not fetch ${url}, status: ${res.status}`); // Это на слуяай если будет ошибка\n        }\n\n        return await res.json(); //Дожидается работы этого промиса и только потом его возвращает\n    };\n\n    export {postData};\n    export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\nimport modal from './modules/modal';\nimport timer from './modules/timer';\nimport cards from './modules/cards';\nimport calculator from './modules/calculator';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\nimport {openModal} from './modules/modal';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000); \n    // Через 50секунд модельное окно само вызовется\n\n    tabs(\".tabheader__item\", '.tabcontent', '.tabheader__items', \"tabheader__item_active\");\n    modal('[data-modal]', \".modal\", modalTimerId);\n    timer('.timer', '2021-06-11');\n    cards();\n    calculator();\n    forms('form', modalTimerId);\n    slider({\n        container: '.offer__slider',\n        nextArrow: '.offer__slider-next',\n        slide: '.offer__slide',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-wrapper',\n        field:'.offer__slider-inner',\n\n    });\n  \n});"],"sourceRoot":""}